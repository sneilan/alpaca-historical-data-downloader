"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.alpaca = exports.dailyBarHeaders = exports.dataDirectory = void 0;
const alpaca_1 = require("@master-chief/alpaca");
const lodash_1 = require("lodash");
const key = process.env.ALPACA_KEY;
const secret = process.env.ALPACA_SECRET;
if (!key || !secret) {
    throw Error(`Missing alpaca key or secret`);
}
const args = process.argv.slice(2);
const dataDirectoryArg = (0, lodash_1.find)(args, x => {
    return x.includes('data-dir=');
});
// Don't end this with a slash. Should identify a folder not what's under the folder.
exports.dataDirectory = dataDirectoryArg ? dataDirectoryArg.split('data-dir=')[0] : '../data';
// divide into temp & finalized
exports.dailyBarHeaders = `symbol,open,high,low,close,volume_weighted,n`;
const credentials = {
    key,
    secret,
    paper: false
};
exports.alpaca = new alpaca_1.AlpacaClient({ credentials, rate_limit: true });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW52aXJvbm1lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJlbnZpcm9ubWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSxpREFBb0Q7QUFDcEQsbUNBQThCO0FBRTlCLE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxDQUFDO0FBQ25DLE1BQU0sTUFBTSxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsYUFBYSxDQUFDO0FBQ3pDLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEVBQUU7SUFDbkIsTUFBTSxLQUFLLENBQUMsOEJBQThCLENBQUMsQ0FBQztDQUM3QztBQUVELE1BQU0sSUFBSSxHQUFHLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQ25DLE1BQU0sZ0JBQWdCLEdBQUcsSUFBQSxhQUFJLEVBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQyxFQUFFO0lBQ3RDLE9BQU8sQ0FBQyxDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUNqQyxDQUFDLENBQUMsQ0FBQTtBQUVGLHFGQUFxRjtBQUN4RSxRQUFBLGFBQWEsR0FBRyxnQkFBZ0IsQ0FBQyxDQUFDLENBQUMsZ0JBQWdCLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUM7QUFDbkcsK0JBQStCO0FBQ2xCLFFBQUEsZUFBZSxHQUFHLDhDQUE4QyxDQUFDO0FBRTlFLE1BQU0sV0FBVyxHQUFHO0lBQ2xCLEdBQUc7SUFDSCxNQUFNO0lBQ04sS0FBSyxFQUFFLEtBQUs7Q0FDYixDQUFDO0FBRVcsUUFBQSxNQUFNLEdBQUcsSUFBSSxxQkFBWSxDQUFDLEVBQUUsV0FBVyxFQUFFLFVBQVUsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWxwYWNhQ2xpZW50IH0gZnJvbSAnQG1hc3Rlci1jaGllZi9hbHBhY2EnO1xuaW1wb3J0IHsgZmluZCB9IGZyb20gJ2xvZGFzaCc7XG5cbmNvbnN0IGtleSA9IHByb2Nlc3MuZW52LkFMUEFDQV9LRVk7XG5jb25zdCBzZWNyZXQgPSBwcm9jZXNzLmVudi5BTFBBQ0FfU0VDUkVUO1xuaWYgKCFrZXkgfHwgIXNlY3JldCkge1xuICB0aHJvdyBFcnJvcihgTWlzc2luZyBhbHBhY2Ega2V5IG9yIHNlY3JldGApO1xufVxuXG5jb25zdCBhcmdzID0gcHJvY2Vzcy5hcmd2LnNsaWNlKDIpO1xuY29uc3QgZGF0YURpcmVjdG9yeUFyZyA9IGZpbmQoYXJncywgeCA9PiB7XG4gIHJldHVybiB4LmluY2x1ZGVzKCdkYXRhLWRpcj0nKTtcbn0pXG5cbi8vIERvbid0IGVuZCB0aGlzIHdpdGggYSBzbGFzaC4gU2hvdWxkIGlkZW50aWZ5IGEgZm9sZGVyIG5vdCB3aGF0J3MgdW5kZXIgdGhlIGZvbGRlci5cbmV4cG9ydCBjb25zdCBkYXRhRGlyZWN0b3J5ID0gZGF0YURpcmVjdG9yeUFyZyA/IGRhdGFEaXJlY3RvcnlBcmcuc3BsaXQoJ2RhdGEtZGlyPScpWzBdIDogJy4uL2RhdGEnO1xuLy8gZGl2aWRlIGludG8gdGVtcCAmIGZpbmFsaXplZFxuZXhwb3J0IGNvbnN0IGRhaWx5QmFySGVhZGVycyA9IGBzeW1ib2wsb3BlbixoaWdoLGxvdyxjbG9zZSx2b2x1bWVfd2VpZ2h0ZWQsbmA7XG5cbmNvbnN0IGNyZWRlbnRpYWxzID0ge1xuICBrZXksXG4gIHNlY3JldCxcbiAgcGFwZXI6IGZhbHNlXG59O1xuXG5leHBvcnQgY29uc3QgYWxwYWNhID0gbmV3IEFscGFjYUNsaWVudCh7IGNyZWRlbnRpYWxzLCByYXRlX2xpbWl0OiB0cnVlIH0pO1xuIl19